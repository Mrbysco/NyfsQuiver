buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.18.2-0.7.2'
group = 'com.nyfaria.nyfsquiver' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'NyfsQuiver'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.18.2'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--username', 'Dev###'


            args '-mixin.config=nyfsquiver.mixins.json'
            mods {
                nyfsquiver {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'


            args '-mixin.config=nyfsquiver.mixins.json'
            
            mods {
                nyfsquiver {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'nyfsquiver', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                nyfsquiver {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        url = "https://maven.theillusivec4.top/"
    }
 	maven {
		url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "100Media"
        url = 'https://maven.100media.dev/'
        credentials {
            username = project.getProperty('hm_maven_username')
            password = project.getProperty('hm_maven_password')
        }
        authentication {
            basic(BasicAuthentication)
        }
    }

}

mixin {
    add sourceSets.main, "nyfsquiver.refmap.json"
}
configurations {
    implementation.extendsFrom shadow
}
dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'

    minecraft 'net.minecraftforge:forge:1.18.2-40.1.68'

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"

    implementation fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3")

    implementation fg.deobf("curse.maven:enchantment-descriptions-250419:3694487")
    implementation fg.deobf("curse.maven:bookshelf-228525:3732237")
//    implementation fg.deobf("curse.maven:cofh-core-69162:3838025")
    shadow fg.deobf("dev._100media.capabilitysyncer:capabilitysyncer:${capabilitysyncer_version}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "nyfsquiver",
            "Specification-Vendor": "nyfsquiversareus",
            "Specification-Version": "0.1.0", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"nyfsquiversareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "nyfsquiver.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
